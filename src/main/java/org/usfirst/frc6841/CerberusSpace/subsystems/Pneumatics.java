// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6841.CerberusSpace.subsystems;

import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Pneumatics extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Compressor compressor;
    private DoubleSolenoid frontSolenoid;
    private DoubleSolenoid backSolenoid;
    private DoubleSolenoid plateSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Pneumatics() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        compressor = new Compressor(0);
        addChild("Compressor",compressor);
        
        
        frontSolenoid = new DoubleSolenoid(0, 0, 1);
        addChild("FrontSolenoid",frontSolenoid);
        
        
        backSolenoid = new DoubleSolenoid(0, 2, 3);
        addChild("BackSolenoid",backSolenoid);
        
        
        plateSolenoid = new DoubleSolenoid(0, 4, 5);
        addChild("PlateSolenoid",plateSolenoid);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    compressor.setClosedLoopControl(true);
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }

    public double compressorValue()
    {
        //boolean enabled = compressor.enabled();
        //boolean pressureSwitch = compressor.getPressureSwitchValue();
        double current = compressor.getCompressorCurrent();
        return current;
    }

    public void frontLift()
    {
        // For some reason reverse is out.
        frontSolenoid.set(DoubleSolenoid.Value.kForward);
    }

    public void frontDown()
    {
        frontSolenoid.set(DoubleSolenoid.Value.kReverse);
    }

    public void backLift()
    {
        backSolenoid.set(DoubleSolenoid.Value.kForward);
    }

    public void backDown()
    {
        backSolenoid.set(DoubleSolenoid.Value.kReverse);
    }
    public void PlateOut()
    {
        plateSolenoid.set(DoubleSolenoid.Value.kForward);
    }

    public void PlateIn()
    {
        plateSolenoid.set(DoubleSolenoid.Value.kReverse);
    }
    

    public void pistonStop()
    {
        frontSolenoid.set(DoubleSolenoid.Value.kOff);
        backSolenoid.set(DoubleSolenoid.Value.kOff);
        plateSolenoid.set(DoubleSolenoid.Value.kOff);
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

